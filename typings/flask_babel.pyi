# flask_babel.pyi (for Flask-Babel 4.0.0)

from typing import Any, Callable, overload
from datetime import datetime, timedelta
from flask import Flask
__version__: str

# Babel Extension
class Babel:
    default_locale: str
    default_timezone: str
    translation_directories: str

    def __init__(
        self,
        app: Flask | None = None,
        default_locale: str | None = None,
        default_domain: str | None = None,
        default_translation_directories: str | None = None,
        default_timezone: str | None = None,
        locale_selector: Callable[[], str] | None = None,
        timezone_selector: Callable[[], str] | None = None
    ) -> None: ...
    def init_app(self, app: Flask) -> None: ...

    def localeselector(self, f: Callable[[], str]) -> Callable[[], str]: ...
    def timezoneselector(self, f: Callable[[], str]) -> Callable[[], str]: ...

    def get_translations(self) -> Any: ...
    def list_translations(self) -> list[str]: ...
    def reload_i18n(self) -> None: ...

# Translation Functions
@overload
def gettext(string: str) -> str: ...
@overload
def gettext(string: str, **variables: Any) -> str: ...
_ = gettext

@overload
def ngettext(singular: str, plural: str, num: int) -> str: ...
@overload
def ngettext(singular: str, plural: str, num: int, **variables: Any) -> str: ...

def lazy_gettext(string: str) -> str: ...
def lazy_ngettext(singular: str, plural: str, num: int) -> str: ...

@overload
def pgettext(context: str, string: str) -> str: ...
@overload
def pgettext(context: str, string: str, **variables: Any) -> str: ...

@overload
def npgettext(context: str, singular: str, plural: str, num: int) -> str: ...
@overload
def npgettext(context: str, singular: str, plural: str, num: int, **variables: Any) -> str: ...

# Formatting Functions
def format_datetime(
    datetime: datetime|float|int|None = ..., 
    format: str|None = ...
) -> str: ...

def format_date(
    datetime: datetime|float|int|None = ..., 
    format: str|None = ...
) -> str: ...

def format_time(
    datetime: datetime|float|int|None = ..., 
    format: str|None = ...
) -> str: ...

def format_timedelta(
    delta: timedelta|int|float, 
    granularity: str = ..., 
    threshold: float = ...
) -> str: ...

# Locale/Timezone Utilities
def get_locale() -> str: ...
def get_timezone() -> str: ...
